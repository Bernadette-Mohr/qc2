on:
  # uncoment the two line below to run the workflow for every even day of the month at 24:00h
  schedule:
    - cron: '0 0 */2 * *'
  push:
    branches:
    - main
  # uncomment below if the workflow must run for every push to a PR pointing to the main branch
  pull_request:
    branches:
    - main

jobs:

  build:
    name: Build for (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest'] #, 'windows-latest']
        python-version: ['3.9'] #['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - name: Set up conda environment with Python ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          activate-environment: test
          auto-activate-base: false
      - name: Conda info
        shell: bash -l {0}
        run: |
          conda activate test
          conda info
          conda list
          conda config --show-sources
          conda config --show
      - name: Python info
        shell: bash -l {0}
        run: |
          conda activate test
          which python
          which pip
          python --version
          python -c "import sys; print(sys.path)"
      - name: Install qc2
        shell: bash -l {0}
        run : |
          conda activate test
          python -m pip install .[dev,publishing,pennylane]
      - name: PSI4 install for tests
        shell: bash -l {0}
        run : |
          conda activate test
          conda install psi4 -c conda-forge/label/libint_dev -c conda-forge # these conda channels my change in the future
      - name: PSI4 info
        shell: bash -l {0}
        run : |
          conda activate test
          which psi4
          psi4 --version
          python -c "import psi4"
      - name: Install Cmake and compilers for ROSE and DIRAC installation
        shell: bash -l {0}
        run: |
          conda activate test
          if [[ ${{ matrix.os }} == 'macos-latest' ]]; then
            conda install -c anaconda cmake
            conda install -c conda-forge gfortran_osx-64  #clang_osx-64 clangxx_osx-64
          else
            conda install -c anaconda cmake
            conda install -c conda-forge gfortran_linux-64  #gcc_linux-64 gxx_linux-64
          fi
      - name: ROSE install for tests
        shell: bash -l {0}
        run: |
          conda activate test
          git clone https://gitlab.com/Cmurilochem/rose.git  # https://gitlab.com/quantum_rose/rose.git
          cd rose
          git checkout ROSE_ase_calculator # this change in branch is only preliminary with future merge request
          cmake -S . -B build -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX
          cmake --build build
          cmake --install build
          echo `pwd`/bin >> $GITHUB_PATH
          cd ..
      #- name: DIRAC install for tests
      #  shell: bash -l {0}
      #  run: |
      #    conda activate test
      #    git clone --recursive --branch v23.0 https://gitlab.com/dirac/dirac.git
      #    cd dirac
      #    ./setup --prefix=$CONDA_PREFIX --pcmsolver=OFF --exatensor=OFF
      #    cd build
      #    make -j
      #    make install
      #    echo `pwd`/bin >> $GITHUB_PATH
      #    cd ..
      - name: Run unit tests
        shell: bash -l {0}
        run : |
          conda activate test
          python -m pytest -v --pyargs tests/unit_tests
      - name: Run integration tests
        shell: bash -l {0}
        run: |
          conda activate test
          pytest -v --pyargs tests/integration_tests
      - name: Verify that we can build the package
        run: python setup.py sdist bdist_wheel
