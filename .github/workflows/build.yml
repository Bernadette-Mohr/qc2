name: Python package

on:
  push:
    branches:
    - main
  # uncomment below if the workflow must run for every push in the PR branch
  pull_request:
    branches:
    - main

jobs:

  build:
    name: Build for (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest'] #, 'windows-latest']
        python-version: ['3.11'] #['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
        #include:
        #  - os: ubuntu-latest
        #    CONDA_OS: linux-64
        #  - os: macos-latest
        #    CONDA_OS: osx-64
    steps:
      - uses: actions/checkout@v4
      #- name: Set up Python ${{ matrix.python-version }}
      #  uses: actions/setup-python@v3
      #  with:
      #    python-version: ${{ matrix.python-version }}
      #- name: Write Conda environment file for PSI4
      #  run: |
      #    cat > environment.yml << EOF
      #    name: test
      #    channels:
      #      - psi4  # to instal the latest nightly build of PSI4 add the 'psi4/label/dev' channel and maybe 'conda-forge/label/libint_dev'
      #      - defaults
      #    dependencies:
      #      - psi4
      #    EOF
      - name: Set up conda environment with Python ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: latest
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          activate-environment: test
          auto-activate-base: false   # environment-file: environment.yml # conda-solver: classic
      #- name: actions-setup-cmake
      #  uses: jwlawson/actions-setup-cmake@v1.14.1
      #- name: Cmake info
      #  shell: bash -l {0}
      #  run: cmake --version
      - name: Conda info
        shell: bash -l {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
      - name: Python info
        shell: bash -l {0}
        run: |
          which python
          which pip
          python --version
          python -c "import sys; print(sys.path)"
      - name: Install qc2
        run: |
         python -m pip install .[dev,publishing,pennylane]
      #- name: Testing h5py
      #  run : |
      #    python -m pip install h5py
      - name: PSI4 install for tests
        run : | #conda install -c conda-forge/label/libint_dev -c conda-forge psi4>=1.8
          conda install -c psi4 psi4
          python -c "import h5py"
          which psi4
          psi4 --version
          python -c "import psi4"
      #- name: Setup GNU Fortran
      #  uses: modflowpy/install-gfortran-action@v1
      #- name: Rose install for tests
      #  run: |
      #    git clone https://git@gitlab.com:Cmurilochem/rose.git  # https://gitlab.com/quantum_rose/rose.git
      #    cd rose
      #    git checkout ROSE_ase_calculator
      #    cmake -S . -B build
      #    cmake --build build
      #    cmake --install build
      #    echo `pwd`/bin >> $GITHUB_PATH
      #    cd ..
      #- name: DIRAC install for tests
      #  run: |
      #    zenodo_get -d 10.5281/zenodo.7670749
      #    tar -xvf DIRAC-23.0-Source.tgz
      #    cd DIRAC-23.0-Source
      #    ./setup
      #    cd build
      #    make
      #    echo `pwd`/bin >> $GITHUB_PATH
      #    cd ..
      #- name: Run unit tests
      #  run: |
      #    pytest -v --pyargs tests/unit_tests
      - name: Run integration tests
        run: |
          pytest -v --pyargs tests/integration_tests
      #- name: Verify that we can build the package
      #  run: python3 setup.py sdist bdist_wheel
