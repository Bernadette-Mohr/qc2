name: Python package

on:
  push:
    branches:
    - main
  # uncomment below if the workflow must run for every push in the PR branch
  pull_request:
    branches:
    - main

jobs:

  build:
    name: Build for (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest'] #, 'windows-latest']
        python-version: ['3.8'] #['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
        #include:
        #  - os: ubuntu-latest
        #    CONDA_OS: linux-64
        #  - os: macos-latest
        #    CONDA_OS: osx-64
    steps:
      #- uses: actions/checkout@v3
      #- name: Set up Python ${{ matrix.python-version }}
      #  uses: actions/setup-python@v3
      #  with:
      #    python-version: ${{ matrix.python-version }}
      - name: Write Conda environment file
        run: |
          cat > environment.yml << EOF
          name: test
          channels:
            - psi4
            - conda-forge
            - defaults
          dependencies:
            - psi4
          EOF
      - name: Set up conda environment with Python ${{ matrix.python-version }}
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          activate-environment: test
          auto-activate-base: false
          environment-file: environment.yml
      #- name: actions-setup-cmake
      #  uses: jwlawson/actions-setup-cmake@v1.14.1
      #- name: Cmake info
      #  shell: bash -l {0}
      #  run: cmake --version
      - name: Conda info
        shell: bash -l {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
      - name: Python info
        shell: bash -l {0}
        run: |
          which python3
          python3 --version
          MY_PYTHONPATH=$(which python3)
          which psi4
      - name: Install qc2
        run: |
          python3 -m install .[dev,publishing,pennylane]
#          python3 -m pip install --upgrade setuptools
#      - name: Install psi4 for tests
#        run: |
#          conda install -c psi4 psi4
#          git clone https://github.com/psi4/psi4.git
#          cd psi4
#          cmake -S . -B build     #-DPython_EXECUTABLE=$MY_PYTHONPATH
#          cd build
#          make -j`getconf _NPROCESSORS_ONLN`
#          make install
#          cd ../../
        #    cd rose
        #conda config --add channels http://conda.anaconda.org/psi4
        #export PSI4_DIR = `which psi4`
        #echo $PSI4_DIR
      #- name: Setup GNU Fortran
      #  uses: modflowpy/install-gfortran-action@v1
      #- name: Rose install for tests
      #  run: |
      #    git clone https://gitlab.com/quantum_rose/rose.git
      #    cd rose
      #    cmake -S . -B build
      #    cmake --build build
      #    cmake --install build
      #    echo `pwd`/bin >> $GITHUB_PATH
      #    cd ..
      #- name: DIRAC install for tests
      #  run: |
      #    zenodo_get -d 10.5281/zenodo.7670749
      #    tar -xvf DIRAC-23.0-Source.tgz
      #    cd DIRAC-23.0-Source
      #    ./setup
      #    cd build
      #    make
      #    echo `pwd`/bin >> $GITHUB_PATH
      #    cd ..
      #- name: Run unit tests
      #  run: |
      #    pytest -v --pyargs tests/unit_tests
      #- name: Run integration tests
      #  run: |
      #    pytest -v --pyargs tests/integration_tests
      #- name: Verify that we can build the package
      #  run: python3 setup.py sdist bdist_wheel
